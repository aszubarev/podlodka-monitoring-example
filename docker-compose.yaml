version: "3.6"
services:
  postgres:
    image: postgres:11
    restart: always
    environment:
      POSTGRES_DB: test
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    ports:
      - "8432:5432"

  prometheus:
    image: "prom/prometheus"
    ports:
      - "9093:9090"
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"

  grafana:
    image: "grafana/grafana"
    ports:
      - "3003:3000"
    volumes:
      - "grafana-storage:/var/lib/grafana"

  server-1.1:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8011:8000"
    command: uvicorn server.main:app --host 0.0.0.0 --log-level critical
    environment:
      POSTGRES_DSN: postgresql://root:root@postgres:5432/test

  server-1.2:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8012:8000"
    command: uvicorn server.main:app --host 0.0.0.0 --log-level critical
    environment:
      POSTGRES_DSN: postgresql://root:root@postgres:5432/test

  server-2.1:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8021:8000"
    command: uvicorn server.main:app --host 0.0.0.0 --log-level critical
    environment:
      POSTGRES_DSN: postgresql://root:root@postgres:5432/test

  client-1.1:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    command: python client.py
    environment:
      BASE_URL: http://server-1.1:8000/

  client-1.2:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    command: python client.py
    environment:
      BASE_URL: http://server-1.2:8000/

  client-2.1:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    command: python client.py
    environment:
      BASE_URL: http://server-2.1:8000/

volumes:
  grafana-storage:
